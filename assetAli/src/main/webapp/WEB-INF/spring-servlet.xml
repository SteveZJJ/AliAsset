<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.eam.api"/>
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 请求映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value=""/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 请求映射 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"
        /> <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="" /> <property name="suffix" value=".jsp"
        /> </bean> -->

    <!-- 避免 Dispatcher 拦截掉静态资源，当静态资源路径出现时，交由DispatcherServlet 处理，不会找其他Controller
        ，而是交给 ResourceHttpRequestHandler 处理，从而找到静态资源 -->
    <!-- mvc:resources location="/api" mapping="/api" /> -->
    <!--配置拦截器, 多个拦截器,顺序执行 ，路径拦截的相同也是互不影响的。 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置 或 /**,将拦截所有的Controller,这里为做实验，采取全拦截 -->
            <mvc:mapping path="/**"/>
            <bean class="com.eam.api.EamInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
</beans>